@startuml
skinparam{
    Maxessagesize 150
}
skinparam sequence{
    ParticipantPadding 30
    MessageAlign center
}
Actor "Пользователь" as User  #green
participant "Бот" as Bot
database "База данных" as db order 8
participant "Сервер" as Server order 10


note right of Bot
  Можно реализовать дополнительно:
  1. Период отправки(Каждое утро(вечер),
   раз в неделю.
  2. Смена города.
  3. Несколько городов.
end note


/' participant "Клиентское приложение для водителей" as Driver order 30 #5f5 '/

/'queue "WebSocket" as br order 20'/
autonumber
skinparam{
    Maxessagesize 200
}
skinparam sequence{
    ParticipantPadding 30
    MessageAlign center
}
title "Приложение бот для получения погоды"
User -> Bot :Пользователь запускает бота нажимаая на кнопку "СТАРТ"
Bot -> Server: Бот делает запрос на сервер о возможных функциях
Server --> Bot: Присылает возможные команды в зашифрованном виде
Bot ->Bot: Бот просит внести данные о городе.
User-> Bot: Пользователь вносит название города
Bot--> Server: Делает запрос на сервер
Server --> Json: Отправляет данные ввиде Json
Json -> db: Запись данных отправленных пользователем
db--> Server: Сервер получает и преобразует данные
Server -> Bot: Сервер отправляет преобразованные данные
Bot->Bot: Отображает в сообщении данные в виде:\n1.Дата и время, \n2.Город,\n3.Погода



@enduml
@startjson
{
   "DateTime":"18/08/24, 7:42",
   "city":"Shlisselburg",
   "weather": ["+32", "Sunny"]
}
@endjson